<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 트랜잭션 적용 : service 의 메소드에 적용   [nameSpaces -> tx (transaction 의 약자) 추가]
		 1. 트랜잭션 메니저 등록 - DataSourceTransactionmanager - spring 제공
		 	dataSource에 대한 정보가 필요
		 2. advisor 등록 : element 이름은 : advice
		 3. aop 설정 : pointcut
		 
		 트랜잭션이 JNDI 와관련
	-->
	
	<!-- 트랜젝션이 DB데이터를 불러 외서 
		 
	-->
	
	<!-- 1.트랜잭션 메니저 등록   DB가 하나라면 트랜잭션 매니저 또한 하나만 등록돼야 한다
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	      property ref 는  datasource-context 에서 불러옴  
		 스프링 빈의 선언 순서는 중요하지 않다 - spring container가 알아서 처리 -->
	
	
	<!-- 2. advisor 등록 -->
	<tx:advice id="txAdvisor" transaction-manager="transactionManager">
		<tx:attributes>
		
			<!-- tx:method name : 트랜잭션을 적용할 메소드의 이름, 패턴 적용
				 		       	  ex)	  
				 				  	select*
				 				  	get*
				 				  	insert* (insertboard, insertmember 등 insert토 시작하는 메소드 이름)
				 				  	* (메소드 전체)
			 -->
			<tx:method name="*" /><!-- * =모든 메서드 등록 -->
			
		</tx:attributes>
	</tx:advice>	 
			 
			 
	<!-- 3. aop 설정 -->
	<aop:config>
		<!-- execution, within - 특정 패키지에 담겨있는 클래스를 찾을때, bean-스프링 빈 -->
		<aop:advisor advice-ref="txAdvisor" pointcut="within(kr.or.ddit..service.*)"/> <!-- service에담긴 모든 클래스 포함 -->
	</aop:config>
			 
			 
			 
			 
			 	<!-- 				이폴더	 java로 		옮겨감 				 -->
</beans>
